#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ALPHA   0
#define NUM     1
#define ARROW   2
#define GAMING  3 
#define SYSTEM  4 

&mt {
    // We use this for the MEH-key only.
    // Higher timeouts are required to prevent misfiring.
    tapping-term-ms = <230>;
    quick_tap_ms = <180>;
    global-quick-tap;
    flavor = "tap-preferred";
};

&sl {
    release-after-ms = <500>;
};

/ {
    behaviors {
        lm: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_left";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <180>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
        };
        rm: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_right";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <180>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
        bindings = <

        &kp Q         &kp W  &kp E  &kp R  &kp T      &kp Y  &kp U  &kp I      &kp O    &kp P
        &mt LSHIFT A  &kp S  &kp D  &kp F  &kp G      &kp H  &kp J  &kp K      &kp L    &kp SINGLE_QUOTE 
        &mt LCTRL Z   &kp X  &kp C  &kp V  &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp Z

                   &lt ARROW SPACE  &lt NUM BKSP      &kp SPACE  &kp LGUI

        >;
        };

        num_and_signs {
        bindings = <

        &kp N1    &kp N2        &kp N3    &kp N4         &kp N5               &kp N6     &kp N7         &kp N8         &kp N9     &kp N0
        &trans    &kp LC(LEFT)  &kp UP    &kp LC(RIGHT)  &kp ESC              &kp MINUS  &kp EQUAL      &kp LBKT       &kp RBKT   &tog GAMING
        &trans    &kp LEFT      &kp DOWN  &kp RIGHT      &kp TAB              &kp GRAVE  &kp SEMICOLON  &kp BACKSLASH  &kp SLASH  &kp ENTER

                                              &kp LC(UP)  &trans              &kp DEL  &none
        >;
        };

        arrow_and_signs {
        bindings = <
// add lang change
        &kp ESC  &none      &sl SYSTEM  &kp LG(R)  &none             &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &none  &none
        &trans   &kp LG(Z)  &kp LG(C)   &kp LG(V)  &kp LG(C)         &none         &none         &none       &none  &none  
        &none    &none      &kp LG(X)   &kp LG(F)  &kp LG(A)         &none         &none         &none       &none  &none

                                              &none  &trans         &trans      &sl SYSTEM
        >;
        };

        gaming {
        bindings = <

        &kp N1      &kp N2  &kp N3  &kp R  &kp N4     &kp ESC  &kp TAB  &kp N  &kp T  &tog GAMING 
        &kp LSHIFT  &kp Q   &kp W   &kp E  &kp F      &kp H    &kp J    &kp K  &kp L  &kp B  
        &kp LCTRL   &kp A   &kp S   &kp D  &kp G      &kp Z    &kp X    &kp C  &kp V  &kp M  
// add spam button if possible
// add mmo and fKeys layer
                            &kp LCTRL  &kp SPACE      &none  &kp LALT
        >;
        };

        system {
        bindings = <

        &sys_reset   &none  &none  &none      &bt BT_SEL 0    &bt BT_SEL 3  &none  &none  &none  &sys_reset
        &bootloader  &none  &none  &none      &bt BT_SEL 1    &bt BT_SEL 4  &none  &none  &none  &bootloader
        &none        &none  &none  &bt BT_CLR &bt BT_SEL 2    &none  &none  &none  &none  &none

                                              &none  &none    &none  &none
        >;
        };
    };
};
